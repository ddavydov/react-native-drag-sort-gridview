"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _react=require("react");var _reactNative=require("react-native");var _default=exports.default=function _default(_ref){var itemWidth=_ref.itemWidth,itemHeight=_ref.itemHeight,sectionWidth=_ref.sectionWidth,sectionHeight=_ref.sectionHeight,numColumns=_ref.numColumns,index=_ref.index,itemLength=_ref.itemLength,isEditing=_ref.isEditing,animMoveDuration=_ref.animMoveDuration,scrollThreshold=_ref.scrollThreshold,shouldAnimOnRelease=_ref.shouldAnimOnRelease,listRef=_ref.listRef,listLayoutRef=_ref.listLayoutRef,listContentHeightRef=_ref.listContentHeightRef,listOffsetYRef=_ref.listOffsetYRef,startAnim=_ref.startAnim,endAnim=_ref.endAnim,onStartDrag=_ref.onStartDrag,updateDragToIndex=_ref.updateDragToIndex,onEndDrag=_ref.onEndDrag;var durationMultiplier=(0,_react.useMemo)(function(){return animMoveDuration/itemWidth;},[itemWidth,animMoveDuration]);var row=(0,_react.useMemo)(function(){return index%numColumns;},[index,numColumns]);var column=(0,_react.useMemo)(function(){return Math.floor(index/numColumns);},[index,numColumns]);var normaliseXOffset=(0,_react.useMemo)(function(){return itemWidth*row+sectionWidth;},[itemWidth,sectionWidth,row]);var normaliseYOffset=(0,_react.useMemo)(function(){return itemHeight*column+sectionHeight;},[itemHeight,sectionHeight,column]);var dummyPanResponder=(0,_react.useMemo)(function(){return{panHandlers:{}};},[]);var dragXAnimRef=(0,_react.useRef)(new _reactNative.Animated.Value(0));var dragYAnimRef=(0,_react.useRef)(new _reactNative.Animated.Value(0));var toIndexRef=(0,_react.useRef)(index);var listInitOffsetY=(0,_react.useRef)(0);var currentOffsetY=(0,_react.useRef)(0);var onPressRelease=(0,_react.useCallback)(function(toIndex){onEndDrag(index,Math.max(0,toIndex));if(shouldAnimOnRelease===false){dragXAnimRef.current.setValue(0);dragYAnimRef.current.setValue(0);}},[index,shouldAnimOnRelease,onEndDrag]);var panResponder=(0,_react.useMemo)(function(){return _reactNative.PanResponder.create({onStartShouldSetPanResponder:function onStartShouldSetPanResponder(_evt,_gestureState){return true;},onStartShouldSetPanResponderCapture:function onStartShouldSetPanResponderCapture(_evt,_gestureState){return true;},onMoveShouldSetPanResponder:function onMoveShouldSetPanResponder(_evt,_gestureState){return true;},onMoveShouldSetPanResponderCapture:function onMoveShouldSetPanResponderCapture(_evt,_gestureState){return true;},onPanResponderStart:function onPanResponderStart(_evt,gestureState){if(gestureState.numberActiveTouches>1){return;}dragXAnimRef.current.setValue(0);dragYAnimRef.current.setValue(0);currentOffsetY.current=0;listInitOffsetY.current=listOffsetYRef.current||0;onStartDrag(index);startAnim();},onPanResponderMove:function onPanResponderMove(_evt,gestureState){var dx=gestureState.dx,dy=gestureState.dy,moveY=gestureState.moveY;if(scrollThreshold&&scrollThreshold>0){var _listLayoutRef$curren,_listLayoutRef$curren2,_listLayoutRef$curren3;var listHeight=((_listLayoutRef$curren=listLayoutRef.current)==null?void 0:_listLayoutRef$curren.height)||0;var listThresdshold=listHeight*0.2;var listUpperThresdshold=(((_listLayoutRef$curren2=listLayoutRef.current)==null?void 0:_listLayoutRef$curren2.y)||0)+listThresdshold;var listLowerThresdshold=(((_listLayoutRef$curren3=listLayoutRef.current)==null?void 0:_listLayoutRef$curren3.y)||0)+listHeight-listThresdshold;if(moveY>listLowerThresdshold){var _listLayoutRef$curren4,_listRef$current;currentOffsetY.current=Math.min(currentOffsetY.current+10,(listContentHeightRef.current||0)-(((_listLayoutRef$curren4=listLayoutRef.current)==null?void 0:_listLayoutRef$curren4.height)||0)-listInitOffsetY.current);var yOffset=listInitOffsetY.current+currentOffsetY.current;(_listRef$current=listRef.current)==null?void 0:_listRef$current.scrollTo({y:yOffset,animated:false});}else if(moveY<listUpperThresdshold){var _listRef$current2;currentOffsetY.current=Math.max(currentOffsetY.current-10,-listInitOffsetY.current);var _yOffset=listInitOffsetY.current+currentOffsetY.current;(_listRef$current2=listRef.current)==null?void 0:_listRef$current2.scrollTo({y:_yOffset,animated:false});}}var sectionX=Math.floor((normaliseXOffset+dx)/sectionWidth/2);var sectionY=Math.floor((normaliseYOffset+dy+currentOffsetY.current)/sectionHeight/2);var newToIndex=sectionY*numColumns+sectionX;if(newToIndex!==toIndexRef.current){toIndexRef.current=newToIndex;updateDragToIndex(newToIndex);}dragXAnimRef.current.setValue(dx);dragYAnimRef.current.setValue(dy+currentOffsetY.current);},onPanResponderTerminationRequest:function onPanResponderTerminationRequest(_evt,_gestureState){return false;},onPanResponderRelease:function onPanResponderRelease(_evt,gestureState){var toIndex=Math.min(Math.max(0,toIndexRef.current),itemLength-1);onPressRelease(toIndex);if(shouldAnimOnRelease===true){var dx=gestureState.dx,dy=gestureState.dy;var distinationX=(toIndex%numColumns-index%numColumns)*itemWidth;var distinationY=(Math.floor(toIndex/numColumns)-Math.floor(index/numColumns))*itemHeight;var duration=Math.min(animMoveDuration,Math.sqrt(Math.pow(distinationX-dx,2)+Math.pow(distinationY-dy,2))*durationMultiplier);_reactNative.Animated.parallel([_reactNative.Animated.timing(dragXAnimRef.current,{toValue:distinationX,duration:duration,useNativeDriver:true}),_reactNative.Animated.timing(dragYAnimRef.current,{toValue:distinationY,duration:duration,useNativeDriver:true})]).start(function(){endAnim();});}},onPanResponderTerminate:function onPanResponderTerminate(_evt,_gestureState){},onShouldBlockNativeResponder:function onShouldBlockNativeResponder(_evt,_gestureState){return true;}});},[index,normaliseXOffset,normaliseYOffset,sectionWidth,sectionHeight,numColumns,itemWidth,itemHeight,itemLength,animMoveDuration,scrollThreshold,shouldAnimOnRelease,listContentHeightRef,listLayoutRef,listOffsetYRef,listRef,durationMultiplier,startAnim,endAnim,onPressRelease,onStartDrag,updateDragToIndex]);return{panResponder:isEditing?panResponder:dummyPanResponder,dragXAnim:dragXAnimRef.current,dragYAnim:dragYAnimRef.current};};
//# sourceMappingURL=usePanResponderViewHooks.js.map